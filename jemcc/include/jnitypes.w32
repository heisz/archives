/**
 * JEMCC-JNI variable type definitions for Microsoft Win32.
 * Copyright (C) 1999-2004 J.M. Heisz 
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * See the file named COPYRIGHT in the root directory of the source
 * distribution for specific references to the GNU Lesser General Public
 * License, as well as further clarification on your rights to use this
 * software.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
 */

/*
 * Note that this information could easily be included in the main jni.h
 * file.  However, splitting it off this way simplifies the configure
 * driven modification of the type information for a specific platform.
 */

#ifndef WRDG_JNITYPES_H
#define WRDG_JNITYPES_H 1

/*
 * The core mappings between the fixed java primitive types and the variant
 * system types.  These are all generated by the test programs in the 
 * configure.in script.
 */
typedef signed char jbyte;
typedef unsigned char jboolean;
typedef float jfloat;
typedef signed short jshort;
typedef unsigned short jchar;
typedef long jint;
typedef unsigned long juint;
typedef __int64 jlong;
typedef double jdouble;
#define ALIGNMENT_OF_JBYTE 1
#define ALIGNMENT_OF_JBOOLEAN 1
#define ALIGNMENT_OF_JSHORT 2
#define ALIGNMENT_OF_JCHAR 2
#define ALIGNMENT_OF_JINT 4
#define ALIGNMENT_OF_JUINT 4
#define ALIGNMENT_OF_JLONG 4
#define ALIGNMENT_OF_JFLOAT 4
#define ALIGNMENT_OF_JDOUBLE 4
#define ALIGNMENT_OF_JOBJECT 4

/* Other definitions for clarity in the VM coding */
typedef jboolean jubyte;
typedef jchar jushort;

/*
 * These (the class file structure elements) don't really belong here, but
 * might as well centralize the system dependent type definitions.
 */
typedef jubyte u1;
typedef jushort u2;
typedef juint u4;

/* Convenience definitions for jboolean operations */
#define JNI_FALSE 0
#define JNI_TRUE 1

/* Type for cardinal indices and size values */
typedef jint jsize;

/*
 * Construct the primitive type hierarchy.  C++ implementations support a
 * dummy class set to enforce subclassing.
 */
#ifdef __cplusplus

class _jobject {};
    class _jclass: public _jobject {};
    class _jstring: public _jobject {};
    class _jarray: public _jobject {};
        class _jobjectArray: public _jarray {};
        class _jbooleanArray: public _jarray {};
        class _jbyteArray: public _jarray {};
        class _jcharArray: public _jarray {};
        class _jshortArray: public _jarray {};
        class _jintArray: public _jarray {};
        class _jlongArray: public _jarray {};
        class _jfloatArray: public _jarray {};
        class _jdoubleArray: public _jarray {};
    class _jthrowable: public _jobject {};

typedef _jobject *jobject;
    typedef _jclass *jclass;
    typedef _jstring *jstring;
    typedef _jarray *jarray;
        typedef _jobjectArray *jobjectArray;
        typedef _jbooleanArray *jbooleanArray;
        typedef _jbyteArray *jbyteArray;
        typedef _jcharArray *jcharArray;
        typedef _jshortArray *jshortArray;
        typedef _jintArray *jintArray;
        typedef _jlongArray *jlongArray;
        typedef _jfloatArray *jfloatArray;
        typedef _jdoubleArray *jdoubleArray;
    typedef _jthrowable *jthrowable;

#else

typedef void *jobject;
    typedef jobject jclass;
    typedef jobject jstring;
    typedef jobject jarray;
        typedef jarray jobjectArray;
        typedef jarray jbooleanArray;
        typedef jarray jbyteArray;
        typedef jarray jcharArray;
        typedef jarray jshortArray;
        typedef jarray jintArray;
        typedef jarray jlongArray;
        typedef jarray jfloatArray;
        typedef jarray jdoubleArray;
    typedef jobject jthrowable;

#endif

/* Field and method identifiers */
struct _jfieldID;
typedef struct _jfieldID *jfieldID;

struct _jmethodID;
typedef struct _jmethodID *jmethodID;

/* Value element type for JNI argument array passing */
typedef union jvalue {
    jboolean z;
    jbyte b;
    jchar c;
    jshort s;
    jint i;
    jlong j;
    jfloat f;
    jdouble d;
    jobject l;
} jvalue;

/* Language specific definitions for standard JNI macros */
#define JNIEXTERN extern
#define JNIEXPORT
#define JNICALL

#endif
