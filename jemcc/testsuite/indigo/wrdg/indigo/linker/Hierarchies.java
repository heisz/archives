// Indigo VM testsuite for testing class/abstract/interface hierarchies. 
// Copyright (C) 1999-2004 J.M. Heisz 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// See the file named COPYRIGHT in the root directory of the source
// distribution for specific references to the GNU General Public License,
// as well as further clarification on your rights to use this software.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//

package wrdg.indigo.linker;

/**
 * <P>
 * Indigo test program to validate class/abstract/interface hierarchy
 * operations.
 * </P>
 *
 * <P>Copyright (&#169;) 1999-2004 J.M. Heisz</P>
 *
 * <P>This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.</P>
 *
 * @author J.M. Heisz
 * @version $Revision: 1.3 $ $Date: 2004/01/05 12:42:13 $
 */

import java.io.*;

public class Hierarchies extends ClassLoader {
    /* Complex hierarchy of classes which should be valid */
    private static int[][] testClassBytes = {
       /* public interface ZIF [] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x07, 0x07, 0x00, 0x05, 0x07, 0x00, 0x06,
        0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
        0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x08,
        0x5a, 0x49, 0x46, 0x2e, 0x6a, 0x61, 0x76, 0x61,
        0x01, 0x00, 0x03, 0x5a, 0x49, 0x46, 0x01, 0x00,
        0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63,
        0x74, 0x06, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04},
       /* public interface NIF [1, 2] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0a, 0x07, 0x00, 0x08, 0x07, 0x00, 0x09,
        0x01, 0x00, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f,
        0x64, 0x4f, 0x6e, 0x65, 0x01, 0x00, 0x03, 0x28,
        0x29, 0x56, 0x01, 0x00, 0x09, 0x6d, 0x65, 0x74,
        0x68, 0x6f, 0x64, 0x54, 0x77, 0x6f, 0x01, 0x00,
        0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
        0x69, 0x6c, 0x65, 0x01, 0x00, 0x08, 0x4e, 0x49,
        0x46, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x01, 0x00,
        0x03, 0x4e, 0x49, 0x46, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x03, 0x00,
        0x04, 0x00, 0x00, 0x04, 0x01, 0x00, 0x05, 0x00,
        0x04, 0x00, 0x00, 0x00, 0x01, 0x00, 0x06, 0x00,
        0x00, 0x00, 0x02, 0x00, 0x07},
       /* public interface LIF [3] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x09, 0x07, 0x00, 0x07, 0x07, 0x00, 0x08,
        0x01, 0x00, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f,
        0x64, 0x54, 0x68, 0x72, 0x65, 0x65, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x0a, 0x53,
        0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c,
        0x65, 0x01, 0x00, 0x08, 0x4c, 0x49, 0x46, 0x2e,
        0x6a, 0x61, 0x76, 0x61, 0x01, 0x00, 0x03, 0x4c,
        0x49, 0x46, 0x01, 0x00, 0x10, 0x6a, 0x61, 0x76,
        0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f,
        0x62, 0x6a, 0x65, 0x63, 0x74, 0x06, 0x01, 0x00,
        0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x04, 0x01, 0x00, 0x03, 0x00, 0x04, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x05, 0x00, 0x00, 0x00,
        0x02, 0x00, 0x06},
       /* public interface NZIF extends ZIF [1, 2, 3] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0d, 0x07, 0x00, 0x0a, 0x07, 0x00, 0x0b,
        0x07, 0x00, 0x0c, 0x01, 0x00, 0x09, 0x6d, 0x65,
        0x74, 0x68, 0x6f, 0x64, 0x4f, 0x6e, 0x65, 0x01,
        0x00, 0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x09,
        0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x77,
        0x6f, 0x01, 0x00, 0x0b, 0x6d, 0x65, 0x74, 0x68,
        0x6f, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65, 0x01,
        0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
        0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x09, 0x4e,
        0x5a, 0x49, 0x46, 0x2e, 0x6a, 0x61, 0x76, 0x61,
        0x01, 0x00, 0x04, 0x4e, 0x5a, 0x49, 0x46, 0x01,
        0x00, 0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c,
        0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65,
        0x63, 0x74, 0x01, 0x00, 0x03, 0x5a, 0x49, 0x46,
        0x06, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01,
        0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x04, 0x01,
        0x00, 0x04, 0x00, 0x05, 0x00, 0x00, 0x04, 0x01,
        0x00, 0x06, 0x00, 0x05, 0x00, 0x00, 0x04, 0x01,
        0x00, 0x07, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x09},
       /* public interface ZNIF extends NIF [] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x09, 0x07, 0x00, 0x06, 0x07, 0x00, 0x07,
        0x07, 0x00, 0x08, 0x01, 0x00, 0x0a, 0x53, 0x6f,
        0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65,
        0x01, 0x00, 0x09, 0x5a, 0x4e, 0x49, 0x46, 0x2e,
        0x6a, 0x61, 0x76, 0x61, 0x01, 0x00, 0x04, 0x5a,
        0x4e, 0x49, 0x46, 0x01, 0x00, 0x10, 0x6a, 0x61,
        0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
        0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x01, 0x00,
        0x03, 0x4e, 0x49, 0x46, 0x06, 0x01, 0x00, 0x01,
        0x00, 0x02, 0x00, 0x01, 0x00, 0x03, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x04, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x05},
       /* public interface MZNIF extends ZIF, NIF [4] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0d, 0x07, 0x00, 0x09, 0x07, 0x00, 0x0a,
        0x07, 0x00, 0x0b, 0x07, 0x00, 0x0c, 0x01, 0x00,
        0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x46,
        0x6f, 0x75, 0x72, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72,
        0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00,
        0x0a, 0x4d, 0x5a, 0x4e, 0x49, 0x46, 0x2e, 0x6a,
        0x61, 0x76, 0x61, 0x01, 0x00, 0x05, 0x4d, 0x5a,
        0x4e, 0x49, 0x46, 0x01, 0x00, 0x10, 0x6a, 0x61,
        0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
        0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x01, 0x00,
        0x03, 0x5a, 0x49, 0x46, 0x01, 0x00, 0x03, 0x4e,
        0x49, 0x46, 0x06, 0x01, 0x00, 0x01, 0x00, 0x02,
        0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00,
        0x00, 0x01, 0x04, 0x01, 0x00, 0x05, 0x00, 0x06,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x08},
       /* public interface MNZIF extends NIF, ZIF [4] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0d, 0x07, 0x00, 0x09, 0x07, 0x00, 0x0a,
        0x07, 0x00, 0x0b, 0x07, 0x00, 0x0c, 0x01, 0x00,
        0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x46,
        0x6f, 0x75, 0x72, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72,
        0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00,
        0x0a, 0x4d, 0x4e, 0x5a, 0x49, 0x46, 0x2e, 0x6a,
        0x61, 0x76, 0x61, 0x01, 0x00, 0x05, 0x4d, 0x4e,
        0x5a, 0x49, 0x46, 0x01, 0x00, 0x10, 0x6a, 0x61,
        0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
        0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x01, 0x00,
        0x03, 0x4e, 0x49, 0x46, 0x01, 0x00, 0x03, 0x5a,
        0x49, 0x46, 0x06, 0x01, 0x00, 0x01, 0x00, 0x02,
        0x00, 0x02, 0x00, 0x03, 0x00, 0x04, 0x00, 0x00,
        0x00, 0x01, 0x04, 0x01, 0x00, 0x05, 0x00, 0x06,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x08},
       /* public interface MZNLIF extends ZNIF, LIF [4] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0d, 0x07, 0x00, 0x09, 0x07, 0x00, 0x0a,
        0x07, 0x00, 0x0b, 0x07, 0x00, 0x0c, 0x01, 0x00,
        0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x46,
        0x6f, 0x75, 0x72, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72,
        0x63, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00,
        0x0b, 0x4d, 0x5a, 0x4e, 0x4c, 0x49, 0x46, 0x2e,
        0x6a, 0x61, 0x76, 0x61, 0x01, 0x00, 0x06, 0x4d,
        0x5a, 0x4e, 0x4c, 0x49, 0x46, 0x01, 0x00, 0x10,
        0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e,
        0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
        0x01, 0x00, 0x04, 0x5a, 0x4e, 0x49, 0x46, 0x01,
        0x00, 0x03, 0x4c, 0x49, 0x46, 0x06, 0x01, 0x00,
        0x01, 0x00, 0x02, 0x00, 0x02, 0x00, 0x03, 0x00,
        0x04, 0x00, 0x00, 0x00, 0x01, 0x04, 0x01, 0x00,
        0x05, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x08},
       /* public abstract class ZA [] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0d, 0x0a, 0x00, 0x03, 0x00, 0x0a, 0x07,
        0x00, 0x0b, 0x07, 0x00, 0x0c, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 0x4c, 0x69,
        0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
        0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x0a,
        0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
        0x6c, 0x65, 0x01, 0x00, 0x07, 0x5a, 0x41, 0x2e,
        0x6a, 0x61, 0x76, 0x61, 0x0c, 0x00, 0x04, 0x00,
        0x05, 0x01, 0x00, 0x02, 0x5a, 0x41, 0x01, 0x00,
        0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63,
        0x74, 0x04, 0x21, 0x00, 0x02, 0x00, 0x03, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x04, 0x00, 0x05, 0x00, 0x01, 0x00, 0x06, 0x00,
        0x00, 0x00, 0x1d, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x05, 0x2a, 0xb7, 0x00, 0x01, 0xb1,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00,
        0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x09},
       /* public abstract class NA [1, 2a] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0f, 0x0a, 0x00, 0x03, 0x00, 0x0c, 0x07,
        0x00, 0x0d, 0x07, 0x00, 0x0e, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 0x4c, 0x69,
        0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
        0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x09,
        0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x6e,
        0x65, 0x01, 0x00, 0x09, 0x6d, 0x65, 0x74, 0x68,
        0x6f, 0x64, 0x54, 0x77, 0x6f, 0x01, 0x00, 0x0a,
        0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
        0x6c, 0x65, 0x01, 0x00, 0x07, 0x4e, 0x41, 0x2e,
        0x6a, 0x61, 0x76, 0x61, 0x0c, 0x00, 0x04, 0x00,
        0x05, 0x01, 0x00, 0x02, 0x4e, 0x41, 0x01, 0x00,
        0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63,
        0x74, 0x04, 0x21, 0x00, 0x02, 0x00, 0x03, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00,
        0x04, 0x00, 0x05, 0x00, 0x01, 0x00, 0x06, 0x00,
        0x00, 0x00, 0x1d, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x05, 0x2a, 0xb7, 0x00, 0x01, 0xb1,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00,
        0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x08, 0x00, 0x05, 0x00, 0x01,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x04,
        0x01, 0x00, 0x09, 0x00, 0x05, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x0b},
       /* public abstract class ZNAMNZIF extends NA implements MNZIF [s] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x10, 0x0a, 0x00, 0x03, 0x00, 0x0c, 0x07,
        0x00, 0x0d, 0x07, 0x00, 0x0e, 0x07, 0x00, 0x0f,
        0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74,
        0x3e, 0x01, 0x00, 0x03, 0x28, 0x29, 0x56, 0x01,
        0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00,
        0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
        0x62, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x0a, 0x53, 0x6f,
        0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65,
        0x01, 0x00, 0x0d, 0x5a, 0x4e, 0x41, 0x4d, 0x4e,
        0x5a, 0x49, 0x46, 0x2e, 0x6a, 0x61, 0x76, 0x61,
        0x0c, 0x00, 0x05, 0x00, 0x06, 0x01, 0x00, 0x08,
        0x5a, 0x4e, 0x41, 0x4d, 0x4e, 0x5a, 0x49, 0x46,
        0x01, 0x00, 0x02, 0x4e, 0x41, 0x01, 0x00, 0x05,
        0x4d, 0x4e, 0x5a, 0x49, 0x46, 0x04, 0x21, 0x00,
        0x02, 0x00, 0x03, 0x00, 0x01, 0x00, 0x04, 0x00,
        0x00, 0x00, 0x02, 0x00, 0x01, 0x00, 0x05, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00,
        0x1d, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x05, 0x2a, 0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08,
        0x00, 0x09, 0x00, 0x06, 0x00, 0x01, 0x00, 0x07,
        0x00, 0x00, 0x00, 0x20, 0x00, 0x01, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x04, 0x10, 0x06, 0x3b, 0xb1,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00,
        0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03,
        0x00, 0x03, 0x00, 0x02, 0x00, 0x01, 0x00, 0x0a,
        0x00, 0x00, 0x00, 0x02, 0x00, 0x0b},
       /* public class MZNAMNZIF extends ZNAMNZIF [2, 3, 4] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x10, 0x0a, 0x00, 0x03, 0x00, 0x0d, 0x07,
        0x00, 0x0e, 0x07, 0x00, 0x0f, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 0x4c, 0x69,
        0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
        0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x09,
        0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x77,
        0x6f, 0x01, 0x00, 0x0b, 0x6d, 0x65, 0x74, 0x68,
        0x6f, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65, 0x01,
        0x00, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
        0x46, 0x6f, 0x75, 0x72, 0x01, 0x00, 0x0a, 0x53,
        0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c,
        0x65, 0x01, 0x00, 0x0e, 0x4d, 0x5a, 0x4e, 0x41,
        0x4d, 0x4e, 0x5a, 0x49, 0x46, 0x2e, 0x6a, 0x61,
        0x76, 0x61, 0x0c, 0x00, 0x04, 0x00, 0x05, 0x01,
        0x00, 0x09, 0x4d, 0x5a, 0x4e, 0x41, 0x4d, 0x4e,
        0x5a, 0x49, 0x46, 0x01, 0x00, 0x08, 0x5a, 0x4e,
        0x41, 0x4d, 0x4e, 0x5a, 0x49, 0x46, 0x00, 0x21,
        0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x04, 0x00, 0x01, 0x00, 0x04, 0x00, 0x05,
        0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1d,
        0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05,
        0x2a, 0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x08, 0x00, 0x05, 0x00, 0x01, 0x00, 0x06, 0x00,
        0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x09,
        0x00, 0x05, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00,
        0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x0a, 0x00,
        0x05, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00,
        0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07,
        0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x09, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x0c},
       /* public class ZC [] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0d, 0x0a, 0x00, 0x03, 0x00, 0x0a, 0x07,
        0x00, 0x0b, 0x07, 0x00, 0x0c, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 0x4c, 0x69,
        0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
        0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x0a,
        0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
        0x6c, 0x65, 0x01, 0x00, 0x07, 0x5a, 0x43, 0x2e,
        0x6a, 0x61, 0x76, 0x61, 0x0c, 0x00, 0x04, 0x00,
        0x05, 0x01, 0x00, 0x02, 0x5a, 0x43, 0x01, 0x00,
        0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63,
        0x74, 0x00, 0x21, 0x00, 0x02, 0x00, 0x03, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x04, 0x00, 0x05, 0x00, 0x01, 0x00, 0x06, 0x00,
        0x00, 0x00, 0x1d, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x05, 0x2a, 0xb7, 0x00, 0x01, 0xb1,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00,
        0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x09},
       /* public class NC [s, 2, 1] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x10, 0x0a, 0x00, 0x03, 0x00, 0x0d, 0x07,
        0x00, 0x0e, 0x07, 0x00, 0x0f, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 0x4c, 0x69,
        0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
        0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x09,
        0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x77,
        0x6f, 0x01, 0x00, 0x09, 0x6d, 0x65, 0x74, 0x68,
        0x6f, 0x64, 0x4f, 0x6e, 0x65, 0x01, 0x00, 0x08,
        0x3c, 0x63, 0x6c, 0x69, 0x6e, 0x69, 0x74, 0x3e,
        0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
        0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x07,
        0x4e, 0x43, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c,
        0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x02, 0x4e,
        0x43, 0x01, 0x00, 0x10, 0x6a, 0x61, 0x76, 0x61,
        0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62,
        0x6a, 0x65, 0x63, 0x74, 0x00, 0x21, 0x00, 0x02,
        0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
        0x00, 0x01, 0x00, 0x04, 0x00, 0x05, 0x00, 0x01,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7,
        0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00,
        0x05, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00,
        0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07,
        0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x07, 0x00, 0x01, 0x00, 0x09, 0x00, 0x05,
        0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x19,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
        0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00,
        0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x0a, 0x00, 0x08, 0x00, 0x0a, 0x00, 0x05, 0x00,
        0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x20, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04, 0x10,
        0x06, 0x3b, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x02, 0x00,
        0x00, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00,
        0x01, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x0c}, 
       /* public class NZC extends ZC [1, 2, 3] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x10, 0x0a, 0x00, 0x03, 0x00, 0x0d, 0x07,
        0x00, 0x0e, 0x07, 0x00, 0x0f, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 0x4c, 0x69,
        0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
        0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x09,
        0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x6e,
        0x65, 0x01, 0x00, 0x09, 0x6d, 0x65, 0x74, 0x68,
        0x6f, 0x64, 0x54, 0x77, 0x6f, 0x01, 0x00, 0x0b,
        0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x68,
        0x72, 0x65, 0x65, 0x01, 0x00, 0x0a, 0x53, 0x6f,
        0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65,
        0x01, 0x00, 0x08, 0x4e, 0x5a, 0x43, 0x2e, 0x6a,
        0x61, 0x76, 0x61, 0x0c, 0x00, 0x04, 0x00, 0x05,
        0x01, 0x00, 0x03, 0x4e, 0x5a, 0x43, 0x01, 0x00,
        0x02, 0x5a, 0x43, 0x00, 0x21, 0x00, 0x02, 0x00,
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
        0x01, 0x00, 0x04, 0x00, 0x05, 0x00, 0x01, 0x00,
        0x06, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x01, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7, 0x00,
        0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07,
        0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x01, 0x00, 0x08, 0x00, 0x05,
        0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x19,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
        0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00,
        0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x03, 0x00, 0x01, 0x00, 0x09, 0x00, 0x05, 0x00,
        0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x19, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xb1,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00,
        0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06,
        0x00, 0x01, 0x00, 0x0a, 0x00, 0x05, 0x00, 0x01,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09, 0x00,
        0x01, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x0c},
       /* public class ZNC extends NC [] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0d, 0x0a, 0x00, 0x03, 0x00, 0x0a, 0x07,
        0x00, 0x0b, 0x07, 0x00, 0x0c, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x0f, 0x4c, 0x69,
        0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
        0x54, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00, 0x0a,
        0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
        0x6c, 0x65, 0x01, 0x00, 0x08, 0x5a, 0x4e, 0x43,
        0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c, 0x00, 0x04,
        0x00, 0x05, 0x01, 0x00, 0x03, 0x5a, 0x4e, 0x43,
        0x01, 0x00, 0x02, 0x4e, 0x43, 0x00, 0x21, 0x00,
        0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1d, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a,
        0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x08,
        0x00, 0x00, 0x00, 0x02, 0x00, 0x09},
       /* public class  MZCNZIF extends ZC implements NZIF [1, 4, 3, 2] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x13, 0x0a, 0x00, 0x03, 0x00, 0x0f, 0x07,
        0x00, 0x10, 0x07, 0x00, 0x11, 0x07, 0x00, 0x12,
        0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74,
        0x3e, 0x01, 0x00, 0x03, 0x28, 0x29, 0x56, 0x01,
        0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00,
        0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
        0x62, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
        0x01, 0x00, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f,
        0x64, 0x4f, 0x6e, 0x65, 0x01, 0x00, 0x0a, 0x6d,
        0x65, 0x74, 0x68, 0x6f, 0x64, 0x46, 0x6f, 0x75,
        0x72, 0x01, 0x00, 0x0b, 0x6d, 0x65, 0x74, 0x68,
        0x6f, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65, 0x01,
        0x00, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
        0x54, 0x77, 0x6f, 0x01, 0x00, 0x0a, 0x53, 0x6f,
        0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x65,
        0x01, 0x00, 0x0c, 0x4d, 0x5a, 0x43, 0x4e, 0x5a,
        0x49, 0x46, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c,
        0x00, 0x05, 0x00, 0x06, 0x01, 0x00, 0x07, 0x4d,
        0x5a, 0x43, 0x4e, 0x5a, 0x49, 0x46, 0x01, 0x00,
        0x02, 0x5a, 0x43, 0x01, 0x00, 0x04, 0x4e, 0x5a,
        0x49, 0x46, 0x00, 0x21, 0x00, 0x02, 0x00, 0x03,
        0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05,
        0x00, 0x01, 0x00, 0x05, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7,
        0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x09, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00,
        0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08,
        0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x03, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x06,
        0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
        0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00,
        0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x06, 0x00,
        0x01, 0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xb1,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00,
        0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09,
        0x00, 0x01, 0x00, 0x0c, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x07, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0c, 0x00,
        0x01, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x0e},
       /* public class ZNCNIF extends ZNC implements NIF [] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x0f, 0x0a, 0x00, 0x03, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x07, 0x00, 0x0e,
        0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74,
        0x3e, 0x01, 0x00, 0x03, 0x28, 0x29, 0x56, 0x01,
        0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00,
        0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
        0x62, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
        0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
        0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x0b,
        0x5a, 0x4e, 0x43, 0x4e, 0x49, 0x46, 0x2e, 0x6a,
        0x61, 0x76, 0x61, 0x0c, 0x00, 0x05, 0x00, 0x06,
        0x01, 0x00, 0x06, 0x5a, 0x4e, 0x43, 0x4e, 0x49,
        0x46, 0x01, 0x00, 0x03, 0x5a, 0x4e, 0x43, 0x01,
        0x00, 0x03, 0x4e, 0x49, 0x46, 0x00, 0x21, 0x00,
        0x02, 0x00, 0x03, 0x00, 0x01, 0x00, 0x04, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x05, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00,
        0x1d, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x05, 0x2a, 0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x06,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01,
        0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0a},
       /* public class MNZCMZNIF extends NZC implements MZNIF [4] */
       {0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x10, 0x0a, 0x00, 0x03, 0x00, 0x0c, 0x07,
        0x00, 0x0d, 0x07, 0x00, 0x0e, 0x07, 0x00, 0x0f,
        0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e, 0x69, 0x74,
        0x3e, 0x01, 0x00, 0x03, 0x28, 0x29, 0x56, 0x01,
        0x00, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x01, 0x00,
        0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
        0x62, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
        0x01, 0x00, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f,
        0x64, 0x46, 0x6f, 0x75, 0x72, 0x01, 0x00, 0x0a,
        0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69,
        0x6c, 0x65, 0x01, 0x00, 0x0e, 0x4d, 0x4e, 0x5a,
        0x43, 0x4d, 0x5a, 0x4e, 0x49, 0x46, 0x2e, 0x6a,
        0x61, 0x76, 0x61, 0x0c, 0x00, 0x05, 0x00, 0x06,
        0x01, 0x00, 0x09, 0x4d, 0x4e, 0x5a, 0x43, 0x4d,
        0x5a, 0x4e, 0x49, 0x46, 0x01, 0x00, 0x03, 0x4e,
        0x5a, 0x43, 0x01, 0x00, 0x05, 0x4d, 0x5a, 0x4e,
        0x49, 0x46, 0x00, 0x21, 0x00, 0x02, 0x00, 0x03,
        0x00, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x01, 0x00, 0x05, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x07, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7,
        0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x08, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x09, 0x00,
        0x06, 0x00, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00,
        0x19, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08,
        0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x03, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x0b}
    };

    private static String[] testClassNames = {
        "ZIF", "NIF", "LIF", "NZIF", "ZNIF", "MZNIF", "MNZIF",
        "MZNLIF", "ZA", "NA", "ZNAMNZIF", "MZNAMNZIF", "ZC",
        "NC", "NZC", "ZNC", "MZCNZIF", "ZNCNIF", "MNZCMZNIF"
    };

    /* Non-abstract class extending abstract class with abstract method call */
    /* NOTE: compiled abstract, reset in byte set below */
    /* public class XCNAR extends NA implements Runnable [] */
    private static int[] XCNARBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x16, 0x0a, 0x00, 0x05, 0x00, 0x0e, 0x0a,
        0x00, 0x04, 0x00, 0x0f, 0x0a, 0x00, 0x04, 0x00,
        0x10, 0x07, 0x00, 0x11, 0x07, 0x00, 0x12, 0x07,
        0x00, 0x13, 0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x01, 0x00, 0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e,
        0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x62,
        0x6c, 0x65, 0x01, 0x00, 0x03, 0x72, 0x75, 0x6e,
        0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
        0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x0a,
        0x58, 0x43, 0x4e, 0x41, 0x52, 0x2e, 0x6a, 0x61,
        0x76, 0x61, 0x0c, 0x00, 0x07, 0x00, 0x08, 0x0c,
        0x00, 0x14, 0x00, 0x08, 0x0c, 0x00, 0x15, 0x00,
        0x08, 0x01, 0x00, 0x05, 0x58, 0x43, 0x4e, 0x41,
        0x52, 0x01, 0x00, 0x02, 0x4e, 0x41, 0x01, 0x00,
        0x12, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x52, 0x75, 0x6e, 0x6e, 0x61,
        0x62, 0x6c, 0x65, 0x01, 0x00, 0x09, 0x6d, 0x65,
        0x74, 0x68, 0x6f, 0x64, 0x4f, 0x6e, 0x65, 0x01,
        0x00, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
        0x54, 0x77, 0x6f, 
        0x00, 0x21, /* WAS 0x04, 0x21 */
        0x00, 0x04, 0x00,
        0x05, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00,
        0x02, 0x00, 0x01, 0x00, 0x07, 0x00, 0x08, 0x00,
        0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1d, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a,
        0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0b,
        0x00, 0x08, 0x00, 0x01, 0x00, 0x09, 0x00, 0x00,
        0x00, 0x29, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x09, 0x2a, 0xb6, 0x00, 0x02, 0x2a, 0xb6,
        0x00, 0x03, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00,
        0x00, 0x00, 0x03, 0x00, 0x04, 0x00, 0x04, 0x00,
        0x08, 0x00, 0x05, 0x00, 0x01, 0x00, 0x0c, 0x00,
        0x00, 0x00, 0x02, 0x00, 0x0d
    };

    /* Non-abstract class extend abs class with special abstract meth call */
    /* NOTE: compiled abstract, reset in byte set below */
    /* public class XCNAS extends NA implements Runnable [] */
    private static int[] XCNASBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x16, 0x0a, 0x00, 0x05, 0x00, 0x0e, 0x0a,
        0x00, 0x04, 0x00, 0x0f, 0x0a, 0x00, 0x04, 0x00,
        0x10, 0x07, 0x00, 0x11, 0x07, 0x00, 0x12, 0x07,
        0x00, 0x13, 0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x01, 0x00, 0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e,
        0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x62,
        0x6c, 0x65, 0x01, 0x00, 0x03, 0x72, 0x75, 0x6e,
        0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
        0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x0a,
        0x58, 0x43, 0x4e, 0x41, 0x52, 0x2e, 0x6a, 0x61,
        0x76, 0x61, 0x0c, 0x00, 0x07, 0x00, 0x08, 0x0c,
        0x00, 0x14, 0x00, 0x08, 0x0c, 0x00, 0x15, 0x00,
        0x08, 0x01, 0x00, 0x05, 0x58, 0x43, 0x4e, 0x41,
        0x53, 0x01, 0x00, 0x02, 0x4e, 0x41, 0x01, 0x00,
        0x12, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x52, 0x75, 0x6e, 0x6e, 0x61,
        0x62, 0x6c, 0x65, 0x01, 0x00, 0x09, 0x6d, 0x65,
        0x74, 0x68, 0x6f, 0x64, 0x4f, 0x6e, 0x65, 0x01,
        0x00, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
        0x54, 0x77, 0x6f, 
        0x00, 0x21, /* WAS 0x04, 0x21 */
        0x00, 0x04, 0x00,
        0x05, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00,
        0x02, 0x00, 0x01, 0x00, 0x07, 0x00, 0x08, 0x00,
        0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1d, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a,
        0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0b,
        0x00, 0x08, 0x00, 0x01, 0x00, 0x09, 0x00, 0x00,
        0x00, 0x29, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00,
        /* Above, but b7 (invokespecial) instead of b6 (invokevirtual) */
        0x00, 0x09, 0x2a, 0xb7, 0x00, 0x02, 0x2a, 0xb7,
        0x00, 0x03, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x0a, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x03, 0x00,
        0x00, 0x00, 0x03, 0x00, 0x04, 0x00, 0x04, 0x00,
        0x08, 0x00, 0x05, 0x00, 0x01, 0x00, 0x0c, 0x00,
        0x00, 0x00, 0x02, 0x00, 0x0d
    };

    /* Non-abstract class extending abstract/if class with abstract meth call */
    /* NOTE: compiled abstract, reset in byte set below */
    /* public class XCZNAMNZIFR extends ZNAMNZIF implements Runnable [3] */
    private static int[] XCZNAMNZIFRBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x19, 0x0a, 0x00, 0x05, 0x00, 0x0f, 0x0b,
        0x00, 0x10, 0x00, 0x11, 0x0b, 0x00, 0x10, 0x00,
        0x12, 0x07, 0x00, 0x13, 0x07, 0x00, 0x14, 0x07,
        0x00, 0x15, 0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x01, 0x00, 0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e,
        0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x62,
        0x6c, 0x65, 0x01, 0x00, 0x0b, 0x6d, 0x65, 0x74,
        0x68, 0x6f, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65,
        0x01, 0x00, 0x03, 0x72, 0x75, 0x6e, 0x01, 0x00,
        0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
        0x69, 0x6c, 0x65, 0x01, 0x00, 0x10, 0x58, 0x43,
        0x5a, 0x4e, 0x41, 0x4d, 0x4e, 0x5a, 0x49, 0x46,
        0x52, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c, 0x00,
        0x07, 0x00, 0x08, 0x07, 0x00, 0x16, 0x0c, 0x00,
        0x17, 0x00, 0x08, 0x0c, 0x00, 0x18, 0x00, 0x08,
        0x01, 0x00, 0x0b, 0x58, 0x43, 0x5a, 0x4e, 0x41,
        0x4d, 0x4e, 0x5a, 0x49, 0x46, 0x52, 0x01, 0x00,
        0x08, 0x5a, 0x4e, 0x41, 0x4d, 0x4e, 0x5a, 0x49,
        0x46, 0x01, 0x00, 0x12, 0x6a, 0x61, 0x76, 0x61,
        0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x52, 0x75,
        0x6e, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x01, 0x00,
        0x03, 0x4e, 0x49, 0x46, 0x01, 0x00, 0x09, 0x6d,
        0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x6e, 0x65,
        0x01, 0x00, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f,
        0x64, 0x54, 0x77, 0x6f, 
        0x00, 0x21, /* WAS 0x04, 0x21 */
        0x00, 0x04,
        0x00, 0x05, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00,
        0x00, 0x03, 0x00, 0x01, 0x00, 0x07, 0x00, 0x08,
        0x00, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x1d,
        0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05,
        0x2a, 0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
        0x0b, 0x00, 0x08, 0x00, 0x01, 0x00, 0x09, 0x00,
        0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x0a, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0x00, 0x0c,
        0x00, 0x08, 0x00, 0x01, 0x00, 0x09, 0x00, 0x00,
        0x00, 0x33, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00,
        0x00, 0x0f, 0x2a, 0x4c, 0x2b, 0xb9, 0x00, 0x02,
        0x01, 0x00, 0x2b, 0xb9, 0x00, 0x03, 0x01, 0x00,
        0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x00,
        0x00, 0x00, 0x12, 0x00, 0x04, 0x00, 0x00, 0x00,
        0x06, 0x00, 0x02, 0x00, 0x07, 0x00, 0x08, 0x00,
        0x08, 0x00, 0x0e, 0x00, 0x09, 0x00, 0x01, 0x00,
        0x0d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0e
    };

    /* Non-abstract class extending abstract/if class with missing meth call */
    /* NOTE: compiled abstract, reset in byte set below */
    /* public class XCZNAMNZIFIR extends ZNAMNZIF implements Runnable [3] */
    private static int[] XCZNAMNZIFIRBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x19, 0x0a, 0x00, 0x05, 0x00, 0x0f, 0x0b,
        0x00, 0x10, 0x00, 0x11, 0x0b, 0x00, 0x10, 0x00,
        0x12, 0x07, 0x00, 0x13, 0x07, 0x00, 0x14, 0x07,
        0x00, 0x15, 0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x01, 0x00, 0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e,
        0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x62,
        0x6c, 0x65, 0x01, 0x00, 0x0b, 0x6d, 0x65, 0x74,
        0x68, 0x6f, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65,
        0x01, 0x00, 0x03, 0x72, 0x75, 0x6e, 0x01, 0x00,
        0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
        0x69, 0x6c, 0x65, 0x01, 0x00, 0x11, 0x58, 0x43,
        0x5a, 0x4e, 0x41, 0x4d, 0x4e, 0x5a, 0x49, 0x46,
        0x49, 0x52, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c,
        0x00, 0x07, 0x00, 0x08, 0x07, 0x00, 0x16, 0x0c,
        0x00, 0x17, 0x00, 0x08, 0x0c, 0x00, 0x18, 0x00,
        0x08, 0x01, 0x00, 0x0c, 0x58, 0x43, 0x5a, 0x4e,
        0x41, 0x4d, 0x4e, 0x5a, 0x49, 0x46, 0x49, 0x52,
        0x01, 0x00, 0x08, 0x5a, 0x4e, 0x41, 0x4d, 0x4e,
        0x5a, 0x49, 0x46, 0x01, 0x00, 0x12, 0x6a, 0x61,
        0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f,
        0x52, 0x75, 0x6e, 0x6e, 0x61, 0x62, 0x6c, 0x65,
        0x01, 0x00, 0x05, 0x4d, 0x4e, 0x5a, 0x49, 0x46,
        0x01, 0x00, 0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f,
        0x64, 0x4f, 0x6e, 0x65, 0x01, 0x00, 0x0a, 0x6d,
        0x65, 0x74, 0x68, 0x6f, 0x64, 0x46, 0x6f, 0x75,
        0x72, 
        0x00, 0x21, /* WAS 0x04, 0x21 */
        0x00, 0x04, 0x00, 0x05, 0x00,
        0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00,
        0x01, 0x00, 0x07, 0x00, 0x08, 0x00, 0x01, 0x00,
        0x09, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x01, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7, 0x00,
        0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0a,
        0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x08,
        0x00, 0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x19,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
        0xb1, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0a, 0x00,
        0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x03, 0x00, 0x01, 0x00, 0x0c, 0x00, 0x08, 0x00,
        0x01, 0x00, 0x09, 0x00, 0x00, 0x00, 0x33, 0x00,
        0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x2a,
        0x4c, 0x2b, 0xb9, 0x00, 0x02, 0x01, 0x00, 0x2b,
        0xb9, 0x00, 0x03, 0x01, 0x00, 0xb1, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x12,
        0x00, 0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x02,
        0x00, 0x07, 0x00, 0x08, 0x00, 0x08, 0x00, 0x0e,
        0x00, 0x09, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x0e
    };

    /* Non-abstract class implementing if class with missing meth call */
    /* NOTE: compiled abstract, reset in byte set below */
    /* public class XCZNCNZIFR extends ZNC implements NZIF, Runnable [] */
    private static int[] XCZNCNZIFRBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x03, 0x00, 0x2d,
        0x00, 0x1b, 0x0a, 0x00, 0x06, 0x00, 0x10, 0x0b,
        0x00, 0x07, 0x00, 0x11, 0x0b, 0x00, 0x07, 0x00,
        0x12, 0x0b, 0x00, 0x07, 0x00, 0x13, 0x07, 0x00,
        0x14, 0x07, 0x00, 0x15, 0x07, 0x00, 0x16, 0x07,
        0x00, 0x17, 0x01, 0x00, 0x06, 0x3c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x01, 0x00, 0x0f, 0x4c, 0x69, 0x6e, 0x65, 0x4e,
        0x75, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x61, 0x62,
        0x6c, 0x65, 0x01, 0x00, 0x03, 0x72, 0x75, 0x6e,
        0x01, 0x00, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
        0x65, 0x46, 0x69, 0x6c, 0x65, 0x01, 0x00, 0x0f,
        0x58, 0x43, 0x5a, 0x4e, 0x43, 0x4e, 0x5a, 0x49,
        0x46, 0x52, 0x2e, 0x6a, 0x61, 0x76, 0x61, 0x0c,
        0x00, 0x09, 0x00, 0x0a, 0x0c, 0x00, 0x18, 0x00,
        0x0a, 0x0c, 0x00, 0x19, 0x00, 0x0a, 0x0c, 0x00,
        0x1a, 0x00, 0x0a, 0x01, 0x00, 0x0a, 0x58, 0x43,
        0x5a, 0x4e, 0x43, 0x4e, 0x5a, 0x49, 0x46, 0x52,
        0x01, 0x00, 0x03, 0x5a, 0x4e, 0x43, 0x01, 0x00,
        0x04, 0x4e, 0x5a, 0x49, 0x46, 0x01, 0x00, 0x12,
        0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e,
        0x67, 0x2f, 0x52, 0x75, 0x6e, 0x6e, 0x61, 0x62,
        0x6c, 0x65, 0x01, 0x00, 0x09, 0x6d, 0x65, 0x74,
        0x68, 0x6f, 0x64, 0x4f, 0x6e, 0x65, 0x01, 0x00,
        0x09, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54,
        0x77, 0x6f, 0x01, 0x00, 0x0b, 0x6d, 0x65, 0x74,
        0x68, 0x6f, 0x64, 0x54, 0x68, 0x72, 0x65, 0x65,
        0x00, 0x21, /* WAS 0x04, 0x21 */
        0x00, 0x05, 0x00, 0x06, 0x00, 0x02,
        0x00, 0x07, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x01, 0x00, 0x09, 0x00, 0x0a, 0x00, 0x01,
        0x00, 0x0b, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7,
        0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0d, 0x00,
        0x0a, 0x00, 0x01, 0x00, 0x0b, 0x00, 0x00, 0x00,
        0x3d, 0x00, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00,
        0x15, 0x2a, 0x4c, 0x2b, 0xb9, 0x00, 0x02, 0x01,
        0x00, 0x2b, 0xb9, 0x00, 0x03, 0x01, 0x00, 0x2b,
        0xb9, 0x00, 0x04, 0x01, 0x00, 0xb1, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x16,
        0x00, 0x05, 0x00, 0x00, 0x00, 0x03, 0x00, 0x02,
        0x00, 0x04, 0x00, 0x08, 0x00, 0x05, 0x00, 0x0e,
        0x00, 0x06, 0x00, 0x14, 0x00, 0x07, 0x00, 0x01,
        0x00, 0x0e, 0x00, 0x00, 0x00, 0x02, 0x00, 0x0f
    };

    /**
     * Locally run through the test cases.
     */
    public static void main(String argv[]) {
        /* Use an instance of myself for testing */
        Hierarchies tstInstance = new Hierarchies();

        /* Parse and check the complex but valid hierarchy */
        for (int i = 0; i < testClassNames.length; i++) {
            tstInstance.localDefineClass(testClassNames[i], testClassBytes[i]);
        }

        /**
         * For all of the following, the JVM specification specifically
         * states that abstract class method errors are not thrown on
         * parsing, but on initialization (due to method call, for instance).
         */
        Class xcnarClass = tstInstance.localDefineClass("XCNAR", XCNARBytes);
        Runnable xcnarRunnable;
        try {
            xcnarRunnable = (Runnable) xcnarClass.newInstance();
        } catch (Throwable t) {
            throw new Error("XCNAR error " + t); 
        }
        try {
            xcnarRunnable.run();
            throw new Error("ERROR: Call to abstract method worked");
        } catch (AbstractMethodError e) {
            /* Expected result of calling methodTwo */
        }

        Class xcnasClass = tstInstance.localDefineClass("XCNAS", XCNASBytes);
        Runnable xcnasRunnable;
        try {
            xcnasRunnable = (Runnable) xcnasClass.newInstance();
        } catch (Throwable t) {
            throw new Error("XCNAS error " + t); 
        }
        try {
            xcnasRunnable.run();
            throw new Error("ERROR: Special call to abstract method worked");
        } catch (AbstractMethodError e) {
            /* Expected result of calling methodTwo */
        }

        Class xcznamnzifrClass = tstInstance.localDefineClass("XCZNAMNZIFR", 
                                                              XCZNAMNZIFRBytes);
        Runnable xcznamnzifrRunnable;
        try {
            xcznamnzifrRunnable = (Runnable) xcznamnzifrClass.newInstance();
        } catch (Throwable t) {
            throw new Error("XCZNAMNZIFR error " + t); 
        }
        try {
            xcznamnzifrRunnable.run();
            throw new Error("ERROR: Call to abstract/if method worked");
        } catch (AbstractMethodError e) {
            /* Expected result of calling abstract methodTwo */
        }

        Class xcznamnzifirClass = tstInstance.localDefineClass("XCZNAMNZIFIR", 
                                                            XCZNAMNZIFIRBytes);
        Runnable xcznamnzifirRunnable;
        try {
            xcznamnzifirRunnable = (Runnable) xcznamnzifirClass.newInstance();
        } catch (Throwable t) {
            throw new Error("XCZNAMNZIFIR error " + t); 
        }
        try {
            xcznamnzifirRunnable.run();
            throw new Error("ERROR: Call to missing abstract/if method worked");
        } catch (AbstractMethodError e) {
            /* Expected result of calling missing methodFour */
        }

        Class xczncnzifrClass = tstInstance.localDefineClass("XCZNCNZIFR", 
                                                             XCZNCNZIFRBytes);
        Runnable xczncnzifrRunnable;
        try {
            xczncnzifrRunnable = (Runnable) xczncnzifrClass.newInstance();
        } catch (Throwable t) {
            throw new Error("XCZNCNZIFR error " + t); 
        }
        try {
            xczncnzifrRunnable.run();
            throw new Error("ERROR: Call to missing if method worked");
        } catch (AbstractMethodError e) {
            /* Expected result of calling missing methodThree */
        }
    }

    /**
     * Local method to wrap class definition with integer byte arrays.
     */
    public Class localDefineClass(String className, int[] byteData) {
        byte[] dataSet = new byte[2048];

        for (int i = 0; i < byteData.length; i++) {
            dataSet[i] = (byte) byteData[i];
        }
        return defineClass(className, dataSet, 0, byteData.length);
    }

    /**
     * Method to provide support for JDK1.1 compilers.
     */
    public Class loadClass(String className, boolean resolve)
            throws ClassNotFoundException {
        return Class.forName(className);
    }
}
