// Indigo VM testsuite for testing field/method descriptor failures.
// Copyright (C) 1999-2004 J.M. Heisz 
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// See the file named COPYRIGHT in the root directory of the source
// distribution for specific references to the GNU General Public License,
// as well as further clarification on your rights to use this software.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//

package wrdg.indigo.parser;

/**
 * <P>
 * Indigo test program to test the parsing of improper method and
 * field descriptor instances.
 * </P>
 *
 * <P>Copyright (&#169;) 1999-2004 J.M. Heisz</P>
 *
 * <P>This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.</P>
 *
 * @author J.M. Heisz
 * @version $Revision: 1.6 $ $Date: 2004/01/05 12:42:13 $
 */

public class Descriptor extends ClassLoader {
    /* This the proper class from which the tests are derived */
    private static int[] descBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;S)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[12] */
    /* Field descriptor missing class semicolon trailer */
    private static int[] fldNoSemiBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Comparable */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x61, 
            0x72, 0x61, 0x62, 0x6c, 0x65, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;S)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[13] */
    /* Method argument missing semicolon */
    private static int[] methArgNoSemiBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/BooleanS)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x42, 0x6f, 0x6f, 0x6c, 
            0x65, 0x61, 0x6e, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[12] */
    /* Method return missing semicolon */
    private static int[] methRetNoSemiBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;S)Ljava/lang/Boolean */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[14] */
    /* Invalid field descriptor */
    private static int[] invFieldBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Xjava/lang/Exception; */
            0x58, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;S)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[16] */
    /* Extra text in field descriptor (primitive) */
    private static int[] fldPrimExtraBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* IXXXXXXXXXXXXXXXXXXXX */
            0x49, 0x58, 0x58, 0x58, 0x58, 0x58, 0x58, 0x58, 
            0x58, 0x58, 0x58, 0x58, 0x58, 0x58, 0x58, 0x58, 
            0x58, 0x58, 0x58, 0x58, 0x58,
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;S)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[17] */
    /* Extra text in field descriptor (array) */
    private static int[] fldArrExtraBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* [[[[[[[[IXXXXXXXXXXXX */
            0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 
            0x49, 0x58, 0x58, 0x58, 0x58, 0x58, 0x58, 0x58, 
            0x58, 0x58, 0x58, 0x58, 0x58,
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;S)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[15] */
    /* Extra text in field descriptor (object) */
    private static int[] fldObjExtraBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Runnable;X */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x42, 0x75, 0x6e, 0x6e, 0x61, 
            0x62, 0x6c, 0x65, 0x3b, 0x58,
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;S)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x53, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[20] */
    /* Invalid character in method return */
    private static int[] invMethRetBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Object;)X */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 
            0x6a, 0x65, 0x63, 0x74, 0x3b, 0x29, 0x58,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[21] */
    /* Invalid character in method argument list */
    private static int[] invMethArgBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;X)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x58, 0x29, 0x4c, 0x6a, 0x61, 
            0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 
            0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[23] */
    /* Extra text in method object return */
    private static int[] methRetObjExtraBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;)Ljava/lang/Object; */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x29, 0x4c, 0x6a, 0x61, 0x76, 
            0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 
            0x62, 0x6a, 0x65, 0x63, 0x74, 0x3b, 0x58,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[22] */
    /* Extra text in method primitive return */
    private static int[] methRetPrimExtraBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;)IX */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3b, 0x29, 0x49, 0x58,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[22] */
    /* Extra text in method void return */
    private static int[] methRetVoidExtraBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;)VX */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3b, 0x29, 0x56, 0x58,
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[18] */
    /* Embedded method in method parameter */
    private static int[] embedMethBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* ((Ljava/lang/Object;Ljava/lang/Class;)V */
            0x28, 0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3b, 0x29, 0x56, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[24] */
    /* Field/method merge (embedded method of a different form) */
    private static int[] fieldEmbedMethBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* S(Ljava/lang/Object;Ljava/lang/Class;)I */
            0x53, 0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3b, 0x29, 0x49, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[25] */
    /* Unterminated method instance */
    private static int[] untermMethBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;III */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3b, 0x49, 0x49, 0x49, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[26] */
    /* Unterminated array instance in field */
    private static int[] untermArrayFldBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* [[[[[[[[[[[[[[[[[[[[[ */
            0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 
            0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 
            0x5b, 0x5b, 0x5b, 0x5b, 0x5b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;I)I */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3B, 0x49, 0x29, 0x49, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[26] */
    /* Unterminated array instance in method */
    private static int[] untermArrayMethBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;[[[ */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3B, 0x5b, 0x5b, 0x5b, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[28] */
    /* Unterminated array instance in method arg */
    private static int[] untermArrayMethArgBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;[)V */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3B, 0x5b, 0x29, 0x56, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[27] */
    /* Void array return value */
    private static int[] methVoidArrayBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;)[V */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3B, 0x29, 0x5b, 0x56, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[29] */
    /* Empty field descriptor */
    private static int[] emptyFldBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x00, /* */
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x27, /* (Ljava/lang/Object;Ljava/lang/Class;I)V */
            0x28, 0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 
            0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 
            0x63, 0x74, 0x3b, 0x4c, 0x6a, 0x61, 0x76, 0x61, 
            0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x43, 0x6c, 
            0x61, 0x73, 0x73, 0x3B, 0x49, 0x29, 0x56, 
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[29] */
    /* Empty method descriptor */
    private static int[] emptyMethBytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0e, 0x09, 0x00, 0x02, 0x00, 0x0b, 0x07,
        0x00, 0x0c, 0x07, 0x00, 0x0d, 0x01, 0x00, 0x02,
        0x65, 0x78, 
        0x01, 0x00, 0x15, /* Ljava/lang/Exception; */
            0x4c, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 
            0x6e, 0x67, 0x2f, 0x45, 0x78, 0x63, 0x65, 0x70, 
            0x74, 0x69, 0x6f, 0x6e, 0x3b, 
        0x01, 0x00, 0x01, 0x66, 
        0x01, 0x00, 0x00, /* */
        0x01, 0x00, 0x08, 0x3c, 0x63, 0x6c, 0x69, 0x6e,
        0x69, 0x74, 0x3e, 0x01, 0x00, 0x03, 0x28, 0x29,
        0x56, 0x01, 0x00, 0x04, 0x43, 0x6f, 0x64, 0x65,
        0x0c, 0x00, 0x04, 0x00, 0x05, 0x01, 0x00, 0x04,
        0x64, 0x65, 0x73, 0x63, 0x01, 0x00, 0x10, 0x6a,
        0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
        0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x06,
        0x00, 0x00, 0x02, 0x00, 0x03, 0x00, 0x00, 0x00,
        0x01, 0x00, 0x19, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x00, 0x00, 0x02, 0x04, 0x01, 0x00, 0x06, 0x00,
        0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,
        0x09, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x11, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x05, 0x01, 0xb3, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* Note to Sun: javac 1.4 actually supports compiling invalid cases */

    /* INTERNAL - descriptor[19] */
    /* Instance (this) method with 254 arguments - valid */
    private static int[] instMeth254Bytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x07, 0x07, 0x00, 0x05, 0x07, 0x00, 0x06,
        0x01, 0x00, 0x01, 0x66, 0x01, 0x01, 0x01, 0x28,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x29, 0x56,
        0x01, 0x00, 0x0b, 0x62, 0x69, 0x67, 0x74, 0x68,
        0x69, 0x73, 0x64, 0x65, 0x73, 0x63, 0x01, 0x00,
        0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c, 0x61,
        0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65, 0x63,
        0x74, 0x06, 0x00, 0x00, 0x01, 0x00, 0x02, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x01, 0x00,
        0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[19] */
    /* Instance (this) method with 255 arguments - invalid */
    private static int[] instMeth255Bytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x07, 0x07, 0x00, 0x05, 0x07, 0x00, 0x06,
        0x01, 0x00, 0x01, 0x66, 0x01, 0x01, 0x02, 0x28,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x29,
        0x56, 0x01, 0x00, 0x0b, 0x62, 0x69, 0x67, 0x74,
        0x68, 0x69, 0x73, 0x64, 0x65, 0x73, 0x63, 0x01,
        0x00, 0x10, 0x6a, 0x61, 0x76, 0x61, 0x2f, 0x6c,
        0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62, 0x6a, 0x65,
        0x63, 0x74, 0x06, 0x00, 0x00, 0x01, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x01,
        0x00, 0x03, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[19] */
    /* Static method with 255 arguments - valid */
    private static int[] statMeth255Bytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0c, 0x0a, 0x00, 0x03, 0x00, 0x09, 0x07,
        0x00, 0x0a, 0x07, 0x00, 0x0b, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x01, 0x66, 0x01,
        0x01, 0x02, 0x28, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x29, 0x56, 0x0c, 0x00, 0x04, 0x00,
        0x05, 0x01, 0x00, 0x0d, 0x62, 0x69, 0x67, 0x73,
        0x74, 0x61, 0x74, 0x69, 0x63, 0x64, 0x65, 0x73,
        0x63, 0x01, 0x00, 0x10, 0x6a, 0x61, 0x76, 0x61,
        0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f, 0x62,
        0x6a, 0x65, 0x63, 0x74, 0x00, 0x20, 0x00, 0x02,
        0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0x00, 0x01,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x00, 0x01,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a, 0xb7,
        0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x09, 0x00, 0x07, 0x00, 0x08, 0x00, 0x01, 0x00,
        0x06, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00,
        0xff, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[19] */
    /* Static method with 256 arguments - invalid */
    private static int[] statMeth256Bytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0c, 0x0a, 0x00, 0x03, 0x00, 0x09, 0x07,
        0x00, 0x0a, 0x07, 0x00, 0x0b, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x01, 0x66, 0x01,
        0x01, 0x03, 0x28, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x29, 0x56, 0x0c, 0x00, 0x04,
        0x00, 0x05, 0x01, 0x00, 0x0d, 0x62, 0x69, 0x67,
        0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x64, 0x65,
        0x73, 0x63, 0x01, 0x00, 0x10, 0x6a, 0x61, 0x76,
        0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f,
        0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x20, 0x00,
        0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a,
        0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x09, 0x00, 0x07, 0x00, 0x08, 0x00, 0x01,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00
    };

    /* INTERNAL - descriptor[19] */
    /* Static method with 512 arguments - invalid */
    private static int[] statMeth512Bytes = {
        0xca, 0xfe, 0xba, 0xbe, 0x00, 0x00, 0x00, 0x2e,
        0x00, 0x0c, 0x0a, 0x00, 0x03, 0x00, 0x09, 0x07,
        0x00, 0x0a, 0x07, 0x00, 0x0b, 0x01, 0x00, 0x06,
        0x3c, 0x69, 0x6e, 0x69, 0x74, 0x3e, 0x01, 0x00,
        0x03, 0x28, 0x29, 0x56, 0x01, 0x00, 0x04, 0x43,
        0x6f, 0x64, 0x65, 0x01, 0x00, 0x01, 0x66, 0x01,
        0x02, 0x03, 0x28, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49,
        0x49, 0x49, 0x49, 0x29, 0x56, 0x0c, 0x00, 0x04,
        0x00, 0x05, 0x01, 0x00, 0x0d, 0x62, 0x69, 0x67,
        0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x64, 0x65,
        0x73, 0x63, 0x01, 0x00, 0x10, 0x6a, 0x61, 0x76,
        0x61, 0x2f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x4f,
        0x62, 0x6a, 0x65, 0x63, 0x74, 0x00, 0x20, 0x00,
        0x02, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x05, 0x00,
        0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x11, 0x00,
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x2a,
        0xb7, 0x00, 0x01, 0xb1, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x09, 0x00, 0x07, 0x00, 0x08, 0x00, 0x01,
        0x00, 0x06, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0xb1, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00
    };

    /**
     * Locally run through the test cases.
     */
    public static void main(String argv[]) {
        /* Use an instance of myself for testing */
        Descriptor tstInstance = new Descriptor();

        /* Missing semicolon in field descriptor */
        try {
            tstInstance.localDefineClass("desc", fldNoSemiBytes);
            throw new Error("ERROR: Missing semicolon field desc parsed");
        } catch (ClassFormatError ex) {}

        /* Missing semicolon in method descriptor argument */
        try {
            tstInstance.localDefineClass("desc", methArgNoSemiBytes);
            throw new Error("ERROR: Missing semicolon argument desc parsed");
        } catch (ClassFormatError ex) {}

        /* Missing semicolon in method descriptor return value */
        try {
            tstInstance.localDefineClass("desc", methRetNoSemiBytes);
            throw new Error("ERROR: Missing semicolon return desc parsed");
        } catch (ClassFormatError ex) {}

        /* Invalid descriptor character instance */
        try {
            tstInstance.localDefineClass("desc", invFieldBytes);
            throw new Error("ERROR: Invalid descriptor tag parsed");
        } catch (ClassFormatError ex) {}

        /* Extra text following field primitive descriptor */
        try {
            tstInstance.localDefineClass("desc", fldPrimExtraBytes);
            throw new Error("ERROR: Extra fld primitive descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Extra text following field array descriptor */
        try {
            tstInstance.localDefineClass("desc", fldArrExtraBytes);
            throw new Error("ERROR: Extra fld array descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Extra text following field object descriptor */
        try {
            tstInstance.localDefineClass("desc", fldObjExtraBytes);
            throw new Error("ERROR: Extra fld object descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Invalid method return type character */
        try {
            tstInstance.localDefineClass("desc", invMethRetBytes);
            throw new Error("ERROR: Invalid method return descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Invalid method arg type character */
        try {
            tstInstance.localDefineClass("desc", invMethArgBytes);
            throw new Error("ERROR: Invalid method arg descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Extra text in method object return descriptor */
        try {
            tstInstance.localDefineClass("desc", methRetObjExtraBytes);
            throw new Error("ERROR: Extra obj method ret descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Extra text in method primitive return descriptor */
        try {
            tstInstance.localDefineClass("desc", methRetPrimExtraBytes);
            throw new Error("ERROR: Extra prim method ret descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Extra text in method void return descriptor */
        try {
            tstInstance.localDefineClass("desc", methRetVoidExtraBytes);
            throw new Error("ERROR: Extra void method ret descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Embedded argument list in method */
        try {
            tstInstance.localDefineClass("desc", embedMethBytes);
            throw new Error("ERROR: Embedded method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Embedded argument list in field */
        try {
            tstInstance.localDefineClass("desc", fieldEmbedMethBytes);
            throw new Error("ERROR: Field embedded method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Unterminated method descriptor */
        try {
            tstInstance.localDefineClass("desc", untermMethBytes);
            throw new Error("ERROR: Terminated method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Unterminated array in field descriptor */
        try {
            tstInstance.localDefineClass("desc", untermArrayFldBytes);
            throw new Error("ERROR: Terminated field array descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Unterminated array in method descriptor */
        try {
            tstInstance.localDefineClass("desc", untermArrayMethBytes);
            throw new Error("ERROR: Terminated method array descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Unterminated array in method argument descriptor */
        try {
            tstInstance.localDefineClass("desc", untermArrayMethArgBytes);
            throw new Error("ERROR: Terminated method array descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Void array method return */
        try {
            tstInstance.localDefineClass("desc", methVoidArrayBytes);
            throw new Error("ERROR: Void array method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Empty field descriptor */
        try {
            tstInstance.localDefineClass("desc", emptyFldBytes);
            throw new Error("ERROR: Empty field descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Empty method descriptor */
        try {
            tstInstance.localDefineClass("desc", emptyMethBytes);
            throw new Error("ERROR: Empty method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* After all the failures, it should be usable */
        tstInstance.localDefineClass("desc", descBytes);

        /* Instance method with this and 255 arguments (invalid) */
        try {
            tstInstance.localDefineClass("bigthisdesc", instMeth255Bytes);
            throw new Error("ERROR: too big instance method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Instance method with this and 254 arguments (valid) */
        tstInstance.localDefineClass("bigthisdesc", instMeth254Bytes);

        /* Static method with 256 arguments (invalid) */
        try {
            tstInstance.localDefineClass("bigstaticdesc", statMeth256Bytes);
            throw new Error("ERROR: too big static method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Static method with 512 arguments (really invalid) */
        try {
            tstInstance.localDefineClass("bigstaticdesc", statMeth256Bytes);
            throw new Error("ERROR: real big static method descriptor parsed");
        } catch (ClassFormatError ex) {}

        /* Static method with 255 arguments (valid) */
        tstInstance.localDefineClass("bigstaticdesc", statMeth255Bytes);
    }

    /**
     * Local method to wrap class definition with integer byte arrays.
     */
    public void localDefineClass(String className, int[] byteData) {
        byte[] dataSet = new byte[2048];

        for (int i = 0; i < byteData.length; i++) {
            dataSet[i] = (byte) byteData[i];
        }
        defineClass(className, dataSet, 0, byteData.length);
    }

    /**
     * Method to provide support for JDK1.1 compilers.
     */
    public Class loadClass(String className, boolean resolve)
            throws ClassNotFoundException {
        return Class.forName(className);
    }
}
